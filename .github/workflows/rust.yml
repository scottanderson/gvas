name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

jobs:
  build:
    name: ${{ matrix.config.toolchain }} / ${{ matrix.config.os }} / build

    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-latest
            toolchain: beta

          - os: macos-latest
            toolchain: stable

          - os: ubuntu-latest
            toolchain: stable

          - os: windows-latest
            toolchain: stable

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            ~/.rustup
          key: ${{ runner.os }}-${{ matrix.config.toolchain }}-build

      - name: Install Rust ${{ matrix.config.toolchain }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.config.toolchain }}
          components: clippy, rustfmt

      - name: Build
        run: cargo build --all-targets --verbose --workspace

      - name: Test
        run: cargo test --all-targets --verbose --workspace

      - name: Build --all-features
        run: cargo build --all-targets --all-features --verbose --workspace

      - name: Test --all-features
        run: cargo test --all-targets --all-features --verbose --workspace

      - name: Check formatting
        run: cargo fmt --check --all

      - name: Clippy
        run: cargo clippy --all-features --all-targets -- -D warnings

  coverage:
    name: stable / ubuntu-latest / coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            ~/.rustup
          key: ${{ runner.os }}-${{ matrix.config.toolchain }}-coverage

      - name: Security Audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: Coverage
        env:
          RUSTFLAGS: '-Cdebuginfo=2 -Cinline-threshold=0 -Clink-dead-code'
          RUSTDOCFLAGS: '-Cdebuginfo=2 -Cinline-threshold=0 -Clink-dead-code'
        run: |
          sudo apt install -y kcov
          cargo clean
          cargo test --no-run --all-features
          find target/debug/deps -type f -executable ! -name "*.*" |
          xargs -n1 kcov --exclude-pattern=tests/,/.cargo,/usr --verify coverage

      - name: Upload coverage report to Coveralls
        uses: coverallsapp/github-action@v2
